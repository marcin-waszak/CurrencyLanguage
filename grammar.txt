
NUMBER ::= [0-9]+(.[0-9]+)?
IDENTIFIER ::= [a-zA-Z][0-9a-zA-Z]*


NEW_CURRENCY ::= 'currency' IDENTIFIER '=' NUMBER IDENTIFIER | 'currency' IDENTIFIER
VAR_DECLARATION ::= 'var' IDENTIFIER '=' NUMBER | 'var' IDENTIFIER '=' NUMBER IDENTIFIER
LINE ::= NEW_CURRENCY ';' |  VAR_DECLARATION ';' | IF | WHILE | RETURN ';'
BLOCK ::= LINE | '{' LINE {LINE} '}'
IF ::= 'if' '(' EXPRESSION ')' BLOCK | 'if' '(' EXPRESSION ')' BLOCK 'else' BLOCK
WHILE ::= 'while' '(' EXPRESSION ')' BLOCK
FUNCTION ::= 'function' IDENTIFIER '('  {IDENTIFIER} {',' IDENTIFIER} ')' '{' LINE {LINE} '}'
RETURN ::= 'return' EXPRESSION

EXPRESSION ::= BINARY_COMPARISON
BINARY_COMPARISON ::= BINARY_SUM {SIGN_COMPARISON BINARY_SUM}
BINARY_SUM ::= BINARY_MUL {SIGN_SUM BINARY_MUL}
BINARY_MUL ::= VALUE {SIGN_MUL VALUE}

SIGN_COMPARISON ::= '==' | '!=' | '<' | '<=' | '>' | '>='
SIGN_SUM ::= '+' | '-'
BINARY_MUL ::= '*' | '/'

# TODO:
# 'as' cast
# VALUE
# unary operators
# ?? multiplying currencies
